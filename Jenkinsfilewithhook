pipeline {
    

    properties([
  pipelineTriggers([
   [$class: 'GenericTrigger',
    genericVariables: [
     [ key: 'committer_name', value: '$.actor.displayName' ],
     [ key: 'committer_email', value: '$.actor.emailAddress' ],
     [ key: 'ref', value: '$.changes[0].refId'],
     [ key: 'tag', value: '$.changes[0].refId', regexpFilter: 'refs/tags/'],
     [ key: 'commit', value: '$.changes[0].toHash' ],
     [ key: 'repo_slug', value: '$.repository.slug' ],
     [ key: 'project_key', value: '$.repository.project.key' ],
     [ key: 'clone_url', value: '$.repository.links.clone[0].href' ]
    ],
     
    causeString: '$committer_name pushed tag $tag to $clone_url referencing $commit',
    
    token: 'abc123',
    
    printContributedVariables: true,
    printPostContent: true,
    
    regexpFilterText: '$ref',
    regexpFilterExpression: '^refs/tags/.*'
   ]
  ])
 ])
 agent any
    stages {
     stage('scm') {
         steps{
         git branch: 'main',
         url: 'https://github.com/demdv/jenkins.git'
         }
     }
     
        stage('Build') {
            steps {
               withAWS(credentials:'JenkinsEcr',region:'us-west-2') {
               sh '''
               docker build -t nginxtest -f Dockerfile .   
               $(aws ecr get-login --region us-west-2 --registry-ids 131460758684 --no-include-email)           
               docker tag nginxtest 131460758684.dkr.ecr.us-west-2.amazonaws.com/nginxtest:latest
               docker tag nginxtest 131460758684.dkr.ecr.us-west-2.amazonaws.com/nginxtest:$BUILD_NUMBER
               docker push 131460758684.dkr.ecr.us-west-2.amazonaws.com/nginxtest:latest
               docker push 131460758684.dkr.ecr.us-west-2.amazonaws.com/nginxtest:$BUILD_NUMBER
               docker rmi -f $(docker images -q)
               ''' 
               }
            }

        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    } 
}
